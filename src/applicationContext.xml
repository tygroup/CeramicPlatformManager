<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/aop    
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	
	<context:component-scan base-package="com.cpf" />
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>
	<!-- 定义使用C3P0连接池的数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的JDBC驱动 -->
		<property name="driverClass">
			<value>${driverClass}</value>
		</property>
		<!-- 连接数据库所用的URL -->
		<property name="jdbcUrl">
			<value>${jdbcUrl}</value>
		</property>
		<!-- 连接数据库的用户名 -->
		<property name="user">
			<value>${user}</value>
		</property>
		<!-- 连接数据库的密码 -->
		<property name="password">
			<value>${password}</value>
		</property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="100" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<property name="maxStatements" value="1000" />
		<property name="initialPoolSize" value="20" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<property name="acquireRetryDelay" value="100"/>
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="false" /> 
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.cpf.bean" />
		<property name="mapperLocations"
			value="classpath:/com/cpf/sqlmap/**/*.xml" />
	</bean>


 <!-- 配置扫描器 -->
	<bean name="middlemap" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cpf.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- 数据库的事务管理器配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- add -->
	<!-- 利用AOP,实现对Service的声明式事务管理 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">

		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<!-- 删除，更新，添加事务配置 -->
			<tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"
				timeout="-1" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"
				timeout="-1" read-only="false" />
			<tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"
				timeout="-1" read-only="false" />
			<tx:method name="save*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"
				timeout="-1" read-only="false" />
			<!-- 其他默认 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="servicepointcut"
			expression="execution(* com.cpf.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicepointcut" />
	</aop:config>
	<!-- 使用annotation定义数据库事务，这样可以在类或方法中直接使用@Transactional注解来声明事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>